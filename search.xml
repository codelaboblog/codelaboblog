<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>for...of v√† for...in trong Javascript</title>
      <link href="/2018/09/13/for-of-va-for-in-trong-js/"/>
      <url>/2018/09/13/for-of-va-for-in-trong-js/</url>
      <content type="html"><![CDATA[<blockquote><p><code>for...of</code> v√† <code>for...in</code> trong Javascript cho ph√©p ch√∫ng ta vi·∫øt nh·ªØng v√≤ng l·∫∑p <code>for</code> m·ªôt c√°ch r·∫•t g·ªçn g√†ng, s√∫c t√≠ch. N·∫øu b·∫°n v·∫´n ph√¢n v√¢n ch∆∞a bi·∫øt khi n√†o th√¨ d√πng <code>for...of</code>, khi n√†o d√πng <code>for...in</code> th√¨ b√†i vi·∫øt n√†y s·∫Ω gi√∫p b·∫°n c√≥ m·ªôt s·ª± ph√¢n bi·ªát r√µ r√†ng h∆°n ƒë·∫•y!</p></blockquote><h2 id="for‚Ä¶of"><a href="#for‚Ä¶of" class="headerlink" title="for‚Ä¶of"></a>for‚Ä¶of</h2><p>Ch√∫ng ta s·ª≠ d·ª•ng <code>for...of</code> ƒë·ªÉ duy·ªát qua c√°c gi√° tr·ªã trong ki·ªÉu <code>iterable</code>, v√≠ d·ª• nh∆∞ array.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'üêî'</span><span class="token punctuation">,</span> <span class="token string">'üê∑'</span><span class="token punctuation">,</span> <span class="token string">'üêë'</span><span class="token punctuation">,</span> <span class="token string">'üêá'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Gertrude'</span><span class="token punctuation">,</span> <span class="token string">'Henry'</span><span class="token punctuation">,</span> <span class="token string">'Melvin'</span><span class="token punctuation">,</span> <span class="token string">'Billy Bob'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> animal <span class="token keyword">of</span> animals<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// Random name for our animal</span>  <span class="token keyword">let</span> nameIdx <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> names<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>names<span class="token punctuation">[</span>nameIdx<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>animal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// Henry the üêî</span><span class="token comment" spellcheck="true">// Melvin the üê∑</span><span class="token comment" spellcheck="true">// Henry the üêë</span><span class="token comment" spellcheck="true">// Billy Bob the üêá</span></code></pre><p>String c≈©ng thu·ªôc ki·ªÉu <code>iterable</code>, n√™n ch√∫ng ta c≈©ng c√≥ th·ªÉ d√πng <code>for...of</code> cho string.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'abcde'</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> char <span class="token keyword">of</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>char<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// AAA</span><span class="token comment" spellcheck="true">// BBB</span><span class="token comment" spellcheck="true">// ...</span></code></pre><p>Ngo√†i ra, <code>for...of</code> c√≤n c√≥ th·ªÉ d√πng ƒë·ªÉ duy·ªát qua <code>map</code>, <code>set</code>, <code>generator</code>, <code>DOM collection</code>, <code>arguments object</code>.</p><h2 id="for‚Ä¶in"><a href="#for‚Ä¶in" class="headerlink" title="for‚Ä¶in"></a>for‚Ä¶in</h2><p>Ch√∫ng ta s·ª≠ d·ª•ng <code>for...in</code> ƒë·ªÉ duy·ªát qua c√°c <code>property</code> c·ªßa object.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> iphoneXS <span class="token operator">=</span> <span class="token punctuation">{</span>  cpu<span class="token punctuation">:</span> <span class="token string">'Apple A12  Bionic'</span><span class="token punctuation">,</span>  rom<span class="token punctuation">:</span> <span class="token string">'512 GB'</span><span class="token punctuation">,</span>  camera<span class="token punctuation">:</span> <span class="token string">'12MP'</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> iphoneXS<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>iphoneXS<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*cpu: Apple A12 Bionicrom: 512 GBcamera: 12MP*/</span></code></pre><p>Ch√∫ng ta c≈©ng s·ª≠ d·ª•ng <code>for...in</code> ƒë·ªÉ duy·ªát qua c√°c index c·ªßa ki·ªÉu iterable, nh∆∞ array hay string.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'CodeLabo'</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Index of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>str<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*Index of C: 0Index of o: 1...*/</span></code></pre>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gi·ªõi thi·ªáu v·ªÅ Set trong Javascript</title>
      <link href="/2018/09/12/gioi-thieu-ve-set-trong-javascript/"/>
      <url>/2018/09/12/gioi-thieu-ve-set-trong-javascript/</url>
      <content type="html"><![CDATA[<blockquote><p>Set l√† m·ªôt ki·ªÉu object m·ªõi trong ES6 (ES2015), d√πng ƒë·ªÉ l∆∞u tr·ªØ c√°c gi√° tr·ªã kh√¥ng tr√πng l·∫∑p. Set c√≥ th·ªÉ ch·ª©a b·∫•t k√¨ ki·ªÉu gi√° tr·ªã n√†o, g·ªìm c√°c gi√° tr·ªã <em>primitive</em> (string, number, boolean, null, undefined, symbol) hay th·∫≠m ch√≠ l√† object literal ho·∫∑c array.</p></blockquote><p>Sau ƒë√¢y l√† v√≠ d·ª• v·ªÅ m·ªôt set ƒë∆°n gi·∫£n v·ªõi m·ªôt s·ªë ph∆∞∆°ng th·ª©c c·ªßa set nh∆∞ <code>add</code>, <code>size</code>, <code>has</code>, <code>forEach</code>, <code>delete</code> v√† <code>clear</code>:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üê±'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üê∂'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üêî'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üê∑'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üê∂'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'üê∑'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// true</span>animals<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">'üê∑'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'üê∑'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// false</span>animals<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>animal <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Hey </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>animal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*Hey üê±!Hey üê∂!Hey üêî!Hey üê∑!*/</span>animals<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 0</span></code></pre><p>D∆∞·ªõi ƒë√¢y ti·∫øp t·ª•c l√† m·ªôt v√≠ d·ª• kh√°c v·ªÅ set. ·ªû ƒë√¢y, ch√∫ng ta truy·ªÅn v√†o m·ªôt array ƒë·ªÉ kh·ªüi t·∫°o set. H√£y ch√∫ √Ω v√†o array ƒë·∫ßu ti√™n: do ch·ª©a c√°c gi√° tr·ªã tr√πng l·∫∑p n√™n kh√¥ng ƒë∆∞·ª£c gi·ªØ nguy√™n ki·ªÉu array m√† ƒë√£ b·ªã t√°ch th√†nh 2 gi√° tr·ªã kh√¥ng tr√πng l·∫∑p. Array ti·∫øp theo do ch·ª©a c√°c gi√° tr·ªã kh√¥ng tr√πng l·∫∑p n√™n v·∫´n ƒë∆∞·ª£c gi·ªØ nguy√™n ki·ªÉu array.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> myAnimals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'üê∑'</span><span class="token punctuation">,</span> <span class="token string">'üê¢'</span><span class="token punctuation">,</span> <span class="token string">'üê∑'</span><span class="token punctuation">,</span> <span class="token string">'üê∑'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myAnimals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'üê®'</span><span class="token punctuation">,</span> <span class="token string">'üêë'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myAnimals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'Turtle'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">'üê¢'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myAnimals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>myAnimals<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>animal <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*üê∑üê¢["üê®", "üêë"]Object { name: "Turtle", type: "üê¢" }*/</span></code></pre><p>String l√† ki·ªÉu iterable n√™n c≈©ng c√≥ th·ªÉ truy·ªÅn v√†o ƒë·ªÉ kh·ªüi t·∫°o set.</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Trong set n√†y ch·ªâ g·ªìm nh·ªØng k√≠ t·ª± kh√°c nhau'</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 43</span><span class="token keyword">let</span> sentence <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">'Trong set n√†y ch·ªâ g·ªìm nh·ªØng k√≠ t·ª± kh√°c nhau'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sentence<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 23</span></code></pre><p>Trong nh·ªØng v√≠ d·ª• tr√™n, ch√∫ng ta ƒë√£ s·ª≠ d·ª•ng <code>forEach</code> ƒë·ªÉ duy·ªát qua c√°c gi√° tr·ªã trong set. Ngo√†i ra, ch√∫ng ta c≈©ng c√≥ th·ªÉ s·ª≠ d·ª•ng <code>for...of</code>.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> moreAnimals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'üêò '</span><span class="token punctuation">,</span> <span class="token string">'üê¥'</span><span class="token punctuation">,</span> <span class="token string">'üêï'</span><span class="token punctuation">,</span> <span class="token string">'üêá'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> animal <span class="token keyword">of</span> moreAnimals<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Hi </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> animal <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*Hi üêòHi üê¥Hi üêïHi üêá*/</span></code></pre><p>Set c√≤n c√≥ ph∆∞∆°ng th·ª©c <code>keys</code> v√† <code>values</code>, v√† hai ph∆∞∆°ng th·ª©c n√†y ƒë·ªÅu tr·∫£ v·ªÅ m·ªôt SetIterator ch·ª©a c√°c gi√° tr·ªã trong set.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> garden <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'üå∑'</span><span class="token punctuation">,</span> <span class="token string">'üåπ'</span><span class="token punctuation">,</span> <span class="token string">'üåª'</span><span class="token punctuation">,</span> <span class="token string">'üå∑'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> flowers <span class="token operator">=</span> garden<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ‚ñ∂ SetIterator {"üå∑", "üåπ", "üåª"}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>done<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*‚ñ∂ {value: "üå∑", done: false}‚ñ∂ {value: "üåπ", done: false}false*/</span></code></pre>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Vi·∫øt desktop app v·ªõi Electron - Hello world</title>
      <link href="/2018/09/11/viet-desktop-app-voi-electron-hello-world/"/>
      <url>/2018/09/11/viet-desktop-app-voi-electron-hello-world/</url>
      <content type="html"><![CDATA[<h3 id="Gioi-Thieu"><a href="#Gioi-Thieu" class="headerlink" title="Gi·ªõi Thi·ªáu"></a>Gi·ªõi Thi·ªáu</h3><p><img src="https://i.imgur.com/EscCpZA.png" alt=""><br><a href="https://electronjs.org/" target="_blank" rel="noopener">Electron</a> l√† framework (open source b·ªüi Github) cho ph√©p vi·∫øt desktop app ch·∫°y tr√™n m·ªçi n·ªÅn t·∫£ng (Mac, Window, Linux) d·ª±a tr√™n c√¥ng ngh·ªá web (Node.js, HTML v√† CSS). Electron kh√¥ng ph·∫£i l√† th∆∞ vi·ªán ƒë·ªÉ x√¢y d·ª±ng giao di·ªán ng∆∞·ªùi d√πng (GUI) cho Javascript, thay v√†o ƒë√≥, Electron s·ª≠ d·ª•ng ch√≠nh trang web l√†m GUI, hay b·∫°n c√≥ th·ªÉ hi·ªÉu Electron l√† m·ªôt tr√¨nh duy·ªát web Chromium.<br>B·∫°n c√≥ th·ªÉ xem <a href="https://electronjs.org/apps" target="_blank" rel="noopener">danh s√°ch c√°c ·ª©ng d·ª±ng ƒë∆∞·ª£c x√¢y d·ª±ng t·ª´ Electron</a> ƒë·ªÉ th·∫•y ƒë∆∞·ª£c s·ª± m·∫°nh m·∫Ω c·ªßa framework n√†y.</p><blockquote><p>2 editor ph·ªï bi·∫øn <a href="https://electronjs.org/apps/visual-studio-code" target="_blank" rel="noopener">VSCode</a> v√† <a href="https://electronjs.org/apps/atom" target="_blank" rel="noopener">Atom</a>, hay ·ª©ng d·ª•ng chat <a href="https://electronjs.org/apps/slack" target="_blank" rel="noopener">Slack</a> c≈©ng ƒë∆∞·ª£c x√¢y d·ª±ng t·ª´ Electron.</p></blockquote><p>N·∫øu b·∫°n c√≥ th·ªÉ x√¢y d·ª±ng 1 web app, b·∫°n ho√†n to√†n c√≥ th·ªÉ x√¢y d·ª±ng 1 desktop app r·∫•t d·ªÖ d√†ng v·ªõi Electron. Kh√¥ng d√†i d√≤ng n·ªØa, c√πng b·∫Øt ƒë·∫ßu n√†o!</p><h3 id="Cai-dat-Nodejs"><a href="#Cai-dat-Nodejs" class="headerlink" title="C√†i ƒë·∫∑t Nodejs"></a>C√†i ƒë·∫∑t Nodejs</h3><p>Tr∆∞·ªõc ti√™n b·∫°n c·∫ßn c√†i ƒë·∫∑t <a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a>. N·∫øu b·∫°n ƒë√£ c√≥ Node.js, h√£y qua b∆∞·ªõc ti·∫øp theo nh√©!</p><h3 id="Khoi-tao-thu-muc"><a href="#Khoi-tao-thu-muc" class="headerlink" title="Kh·ªüi t·∫°o th∆∞ m·ª•c"></a>Kh·ªüi t·∫°o th∆∞ m·ª•c</h3><p>T·∫°o m·ªôt th∆∞ m·ª•c d√†nh cho ·ª©ng d·ª•ng c·ªßa b·∫°n v√† ch·∫°y c√¢u l·ªánh <code>npm init</code> trong th∆∞ m·ª•c ƒë√≥:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> electron-hello-world<span class="token function">cd</span> electron-hello-world<span class="token function">npm</span> init</code></pre><p><code>npm init</code> s·∫Ω ƒë∆∞a b·∫°n qua t·ª´ng b∆∞·ªõc ƒë·ªÉ t·∫°o m·ªôt file <code>package.json</code> c∆° b·∫£n.<br>B·∫°n c≈©ng c√≥ th·ªÉ s·ª≠ d·ª•ng <code>npm init -y</code> ƒë·ªÉ ch·∫•p nh·∫≠n t·∫•t c·∫£ c√°c m·∫∑c ƒë·ªãnh<br>K·∫øt qu·∫£ s·∫Ω nh∆∞ th·∫ø n√†y:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"electron-hello-world"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">}</span></code></pre><h3 id="Cai-dat-Electron"><a href="#Cai-dat-Electron" class="headerlink" title="C√†i ƒë·∫∑t Electron"></a>C√†i ƒë·∫∑t Electron</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> electron --save</code></pre><p>Sau khi c√†i ƒë·∫∑t Electron, b·∫°n h√£y v√†o file <code>package.json</code> v√† th√™m v√†o l·ªánh <code>start</code> nh∆∞ d∆∞·ªõi ƒë√¢y, b·ªè lu√¥n l·ªánh <code>test</code> ƒëi c≈©ng ƒë∆∞·ª£c.</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"electron-hello-world"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"electron ."</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">}</span></code></pre><h3 id="Cau-truc-thu-muc"><a href="#Cau-truc-thu-muc" class="headerlink" title="C·∫•u tr√∫c th∆∞ m·ª•c"></a>C·∫•u tr√∫c th∆∞ m·ª•c</h3><p>ƒê√¢y l√† c·∫•u tr√∫c c∆° b·∫£n c·ªßa m·ªôt Electron app:</p><pre class=" language-dir"><code class="language-dir">electron-hello-world/  ‚îú‚îÄ‚îÄ /node_modules  ‚îú‚îÄ‚îÄ package-lock.json  ‚îú‚îÄ‚îÄ package.json  ‚îú‚îÄ‚îÄ index.js  ‚îî‚îÄ‚îÄ index.html</code></pre><p>B√¢y gi·ªù ch√∫ng ta s·∫Ω ti·∫øp t·ª•c v·ªõi <code>index.js</code> v√† <code>index.html</code> n√†o!</p><h3 id="File-index-js"><a href="#File-index-js" class="headerlink" title="File index.js"></a>File index.js</h3><p>C√°c b·∫°n c√≥ th·ªÉ copy ƒëo·∫°n code sau cho nhanh, nh∆∞ng theo m√¨nh c√°c b·∫°n n√™n g√µ l·∫°i, tuy m·∫•t m·ªôt ch√∫t th·ªùi gian nh∆∞ng nh∆∞ th·∫ø s·∫Ω t·ªët h∆°n ƒë·ªëi v·ªõi ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu ƒë·∫•y!</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> electron <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'electron'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/* module d√πng ƒë·ªÉ qu·∫£n l√≠ app */</span><span class="token keyword">const</span> app <span class="token operator">=</span> electron<span class="token punctuation">.</span>app<span class="token comment" spellcheck="true">/* module d√πng ƒë·ªÉ t·∫°o c·ªßa s·ªï cho ·ª©ng ·ª©ng d·ª•ng  */</span><span class="token keyword">const</span> BrowserWindow <span class="token operator">=</span> electron<span class="token punctuation">.</span>BrowserWindow<span class="token comment" spellcheck="true">/* bi·∫øn mainWindow b·∫Øt bu·ªôc ph·∫£i l√† bi·∫øn to√†n c·ª•c */</span><span class="token keyword">let</span> mainWindow<span class="token keyword">function</span> createWindow <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/* t·∫°o c·ª≠a s·ªï cho ·ª©ng d·ª•ng v·ªõi 2 tham s·ªë width v√† height  ngo√†i ra c√≤n r·∫•t nhi·ªÅu nh·ªØng tham s·ªë kh√°c s·∫Ω ƒë∆∞·ª£c ƒë·ªÅ c·∫≠p ·ªü c√°c ph·∫ßn sau */</span>  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>width<span class="token punctuation">:</span> <span class="token number">800</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">600</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">/* t·∫£i file index.html l√†m GUI */</span>  mainWindow<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`file://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.html`</span></span><span class="token punctuation">)</span>  mainWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'closed'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    mainWindow <span class="token operator">=</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* createWindow khi Electron ƒë√£ ho√†n th√†nh vi·ªác kh·ªüi t·∫°o v√† s·∫µn s√†ng.M·ªôt s·ªë APIs ch√≠ c√≥ th·ªÉ s·ª≠ d·ª•ng sau khi event n√†y x·∫£y ra */</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'ready'</span><span class="token punctuation">,</span> createWindow<span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'window-all-closed'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'activate'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>mainWindow <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h3 id="File-index-html"><a href="#File-index-html" class="headerlink" title="File index.html"></a>File index.html</h3><p>B·∫°n c√≥ th·ªÉ t·∫°o m·ªôt file <code>index.html</code> ƒë∆°n gi·∫£n nh∆∞ sau:</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>      We are using node <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>node<span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>,      Chrome <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>chrome<span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>,      and Electron <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>electron<span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="Chay-ung-dung"><a href="#Chay-ung-dung" class="headerlink" title="Ch·∫°y ·ª©ng d·ª•ng"></a>Ch·∫°y ·ª©ng d·ª•ng</h3><p>B√¢y gi·ªù, b·∫°n h√£y m·ªü command promt l√™n v√† ch·∫°y l·ªánh <code>npm start</code> t·ª´ th∆∞ m·ª•c c·ªßa b·∫°n.<br><img src="https://i.imgur.com/xTF2kJT.png" alt=""><br>Tada, b·∫°n v·ª´a t·∫°o ra 1 desktop app b·∫±ng ng√¥n ng·ªØ web ƒë√≥. B·∫°n c√≥ th·ªÉ quay l·∫°i editor ƒë·ªÉ ch·ªânh s·ª≠a file <code>index.html</code>, hay b·∫°n c≈©ng c√≥ th·ªÉ t·∫°o th√™m c√°c file <code>css</code>, <code>js</code> v√† nh√∫ng v√†o <code>index.html</code>, ho·∫∑c t·∫°o th√™m nhi·ªÅu file <code>html</code> kh√°c, ho√†n to√†n gi·ªëng nh∆∞ vi·ªác x√¢y d·ª±ng m·ªôt web app.</p><h3 id="Tong-ket"><a href="#Tong-ket" class="headerlink" title="T·ªïng k·∫øt"></a>T·ªïng k·∫øt</h3><p>B√†i vi·∫øt n√†y m·ªõi ch·ªâ gi√∫p cho c√°c b·∫°n l√†m quen v·ªõi Electron. Trong c√°c b√†i ti·∫øp theo, m√¨nh s·∫Ω h∆∞·ªõng d·∫´n c√°c b·∫°n s√¢u h∆°n, nhi·ªÅu h∆°n v·ªÅ Electron c√πng v·ªõi r·∫•t nhi·ªÅu API h·ªó tr·ª£ trong vi·ªác x√¢y d·ª±ng desktop app c·ªßa framework n√†y. Ngo√†i ra, m√¨nh s·∫Ω h∆∞·ªõng d·∫´n c√°c b·∫°n l√†m m·ªôt s·ªë app kh√° hay v·ªõi Electron </p>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nh·ªØng c√∫ ph√°p ƒë·∫∑c bi·ªát c·ªßa Javascript</title>
      <link href="/2018/09/11/nhung-cu-phap-dac-biet-cua-js/"/>
      <url>/2018/09/11/nhung-cu-phap-dac-biet-cua-js/</url>
      <content type="html"><![CDATA[<blockquote><p>Trong b√†i vi·∫øt n√†y, ch√∫ng ta s·∫Ω n√≥i v·ªÅ nh·ªØng th·ª© m√† ai c≈©ng v·∫≠y ‚ÄúNh∆∞ng JS th√¨ kh√¥ng‚Äù</p></blockquote><h2 id="Lenh-gan-co-the-o-khap-moi-noi"><a href="#Lenh-gan-co-the-o-khap-moi-noi" class="headerlink" title="L·ªánh g√°n c√≥ th·ªÉ ·ªü kh·∫Øp m·ªçi n∆°i"></a>L·ªánh g√°n c√≥ th·ªÉ ·ªü kh·∫Øp m·ªçi n∆°i</h2><p>Th√¥ng th∆∞·ªùng nh·ªØng ng√¥n ng·ªØ kh√°c s·∫Ω c·ªë ƒë·ªãnh l·ªánh g√°n ph·∫£i n·∫±m ri√™ng bi·ªát tr√™n 1 d√≤ng l·ªánh, nh∆∞ng JS th√¨ kh√¥ng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token keyword">const</span> a <span class="token operator">=</span> window<span class="token punctuation">.</span>myCache <span class="token operator">||</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>myCache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç‚Äç‚Äç‚Äç<span class="token function">functionCall</span><span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>‚Äç‚Äç‚Äç</p><h2 id="Rut-gon-dieu-kien-true-false"><a href="#Rut-gon-dieu-kien-true-false" class="headerlink" title="R√∫t g·ªçn ƒëi·ªÅu ki·ªán true/false"></a>R√∫t g·ªçn ƒëi·ªÅu ki·ªán true/false</h2><p>JS xem nh·ªØng bi·ªÉu th·ª©c <code>null</code>, <code>undefined</code>, chu·ªói r·ªóng, s·ªë 0 t∆∞∆°ng ƒë∆∞∆°ng v·ªõi <code>false</code><br>V√† xem s·ªë kh√°c 0, chu·ªói kh√¥ng r·ªóng, object b·∫•t k·ª≥ t∆∞∆°ng ƒë∆∞∆°ng <code>true</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">===</span> <span class="token number">0</span>  <span class="token operator">||</span> a <span class="token operator">===</span> <span class="token keyword">null</span>  <span class="token operator">||</span> a <span class="token operator">===</span> undefined  <span class="token operator">||</span> a <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// c√≥ th·ªÉ r√∫t g·ªçn th√†nh</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span></code></pre><h2 id="Bieu-thuc-amp-amp-va-khong-tra-ve-true-false"><a href="#Bieu-thuc-amp-amp-va-khong-tra-ve-true-false" class="headerlink" title="Bi·ªÉu th·ª©c &amp;&amp; v√† || kh√¥ng tr·∫£ v·ªÅ true/false"></a>Bi·ªÉu th·ª©c &amp;&amp; v√† || kh√¥ng tr·∫£ v·ªÅ true/false</h2><p>C√°c ng√¥n ng·ªØ kh√°c m·∫∑c ƒë·ªãnh r·∫±ng k·∫øt h·ª£p &amp;&amp; ho·∫∑c || s·∫Ω lu√¥n l√† true/false nh∆∞ng JS th√¨ kh√¥ng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> length <span class="token operator">=</span> itemChanged <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// n·∫øu itemChanged l√† false th√¨ length = false;</span><span class="token comment" spellcheck="true">// n·∫øu itemChanged l√† true th√¨ length l√† array.length;</span><span class="token keyword">function</span> <span class="token function">plugin</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>  options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// n·∫øu options ch∆∞a kh·ªüi t·∫°o th√¨ g√°n options b·∫±ng {}</span>  <span class="token comment" spellcheck="true">// ng∆∞·ª£c l·∫°i th√¨ v·∫´n d√πng l·∫°i gi√° tr·ªã options</span><span class="token punctuation">}</span></code></pre><h2 id="Dung-bitwise-operator-de-nhan-hoac-chia"><a href="#Dung-bitwise-operator-de-nhan-hoac-chia" class="headerlink" title="D√πng bitwise operator ƒë·ªÉ nh√¢n ho·∫∑c chia"></a>D√πng bitwise operator ƒë·ªÉ nh√¢n ho·∫∑c chia</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token number">100</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">200</span><span class="token number">100</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">400</span><span class="token number">100</span> <span class="token operator">></span><span class="token operator">></span> <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">50</span><span class="token number">100</span> <span class="token operator">></span><span class="token operator">></span> <span class="token number">2</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">25</span></code></pre><h2 id="Dung-switch-thay-the-nhieu-if-phuc-tap"><a href="#Dung-switch-thay-the-nhieu-if-phuc-tap" class="headerlink" title="D√πng switch thay th·∫ø nhi·ªÅu if ph·ª©c t·∫°p"></a>D√πng switch thay th·∫ø nhi·ªÅu if ph·ª©c t·∫°p</h2><p>M·ªôt s·ªë ng√¥n ng·ªØ ch·ªâ cho ph√©p case ch·ª©a nh·ªØng primitive value, nh∆∞ng JS th√¨ kh√¥ng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// do something 1</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// do something 2</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// do something 3</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// c√≥ th·ªÉ chuy·ªÉn th√†nh</span><span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">case</span> a<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">// do something 1</span>  <span class="token keyword">case</span> b<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">// do something 2</span>  <span class="token keyword">default</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">// do something 3</span><span class="token punctuation">}</span></code></pre><p><em>B√†i vi·∫øt thu·ªôc v·ªÅ <a href="https://www.facebook.com/groups/jsland/" target="_blank" rel="noopener">Jsland (C·ªông ƒë·ªìng Javascript l·ªõn nh·∫•t Vi·ªát Nam)</a></em></p>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Array kh√¥ng ch·ªâ l√† array</title>
      <link href="/2018/09/10/array-khong-chi-la-array/"/>
      <url>/2018/09/10/array-khong-chi-la-array/</url>
      <content type="html"><![CDATA[<blockquote><p>H·∫ßu h·∫øt c√°c ng√¥n ng·ªØ ƒë·ªÅu trang b·ªã ki·ªÉu array ƒë·ªÉ x·ª≠ l√≠, l∆∞u tr·ªØ nhi·ªÅu ph·∫ßn t·ª≠ c√πng l√∫c, JS c≈©ng kh√¥ng ngo·∫°i l·ªá. Nh∆∞ng array trong JS kh√¥ng ch·ªâ ƒë∆°n gi·∫£n l√† array.</p></blockquote><p>Ch√∫ng ta c√≥ th·ªÉ d√πng array l√†m:</p><ul><li>Array (ƒë∆∞∆°ng nhi√™n)</li><li>Stack</li><li>Queue</li><li>Dictionary</li><li>Sortable List</li><li>String Builder</li><li>Commbo</li></ul><h2 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h2><p>Ch√∫ng ta c√≥ th·ªÉ d√πng array nh∆∞ 1 stack, ƒë·∫∑c t√≠nh c·ªßa stack l√† LIFO (ƒëi tr·ªÖ v·ªÅ s·ªõm). C√≥ 2 method ƒë·ªÉ l√†m chuy·ªán n√†y l√† <code>push</code> v√† <code>pop</code>.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3, 4]</span>array<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span></code></pre><h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><p>S·ª≠ d·ª•ng array nh∆∞ 1 queue c≈©ng c√≥ 2 method l√† <code>unshift</code> (enqueue), <code>shift</code> (dequeue) ƒë·ªÉ ƒë·∫£m b·∫£o ƒë·∫∑c t√≠nh FIFO (ƒëi s·ªõm v·ªÅ s·ªõm)</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [2, 3]</span>array<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span></code></pre><h2 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h2><p>D√πng array nh∆∞ m√¥t Dictionary c√≥ h∆°i mi·ªÖn c∆∞·ª°ng nh∆∞ng ok, fine, n√≥ v·∫´n ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ‚ñ∂ (3) [1, 2, 3]</span>array<span class="token punctuation">[</span><span class="token string">'$key1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ‚ñ∂ (3) [1, 2, 3, $key1: 1]</span>array<span class="token punctuation">.</span>$key2 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ‚ñ∂ (3) [1, 2, 3, $key1: 1, $key2: 2]</span><span class="token keyword">delete</span> array<span class="token punctuation">.</span>$key2<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ‚ñ∂ (3) [1, 2, 3, $key1: 1]</span></code></pre><p>Nh∆∞ c√°c b·∫°n ƒë√£ th·∫•y, vi·ªác thao t√°c tr√™n key c√≥ 2 ƒëi·ªÉm c·∫ßn l∆∞u √Ω, key ph·∫£i th√™m k√Ω t·ª± ph√¢n bi·ªát n√†o ƒë√≥ ƒë·ªÉ tr√°nh tr√πng t√™n v·ªõi nh·ªØng prop/method c·ªßa array, ·ªü ƒë√¢y m√¨nh d√πng d·∫•u $. Th·ª© hai l√† vi·ªác th√™m hay x√≥a key kh√¥ng l√†m thay ƒë·ªïi s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ trong array. Mu·ªën duy·ªát key th√¨ d√πng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*012$key1*/</span></code></pre><h2 id="Sortable-List"><a href="#Sortable-List" class="headerlink" title="Sortable List"></a>Sortable List</h2><p>D√πng array nh∆∞ sortable list kh√° ƒë∆°n gi·∫£n, b·∫£n th√¢n method <code>sort</code> c·ªßa array l√† mutable n√™n m·ªói l·∫ßn th√™m item m·ªõi v√†o th√¨ ch√∫ng ta <code>sort</code> l·∫°i</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [5, 6, 7, 1]</span>array<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 5, 6, 7]</span></code></pre><h2 id="String-Builder"><a href="#String-Builder" class="headerlink" title="String Builder"></a>String Builder</h2><p>Array c√≤n ƒë∆∞·ª£c s·ª≠ d·ª•ng nh∆∞ String Builder, ƒëa s·ªë ng√¥n ng·ªØ l·∫≠p tr√¨nh, vi·ªác n·ªëi chu·ªói m·∫•t kh√° nhi·ªÅu b·ªô nh·ªõ v√† ch·∫≠m, vi m·ªói l·∫ßn n·ªëi chu·ªói th√¨ h·ªá th·ªëng ph·∫£i c·∫•p ph√°t v√πng nh·ªõ m·ªõi r·ªông h∆°n, ·ª©ng v·ªõi ƒë·ªô d√†i chu·ªói c·ªß v√† m·ªõi c·ªông l·∫°i, sau ƒë√≥ sao ch√©p c·∫£ 2 v√†o ƒë√≥. N√™n x·ª≠ l√Ω chu·ªói nhi·ªÅu c√≥ th·ªÉ l√†m ch·∫≠m h·ªá th·ªëng, v√¨ v·∫≠y String Builder ra ƒë·ªùi, gi√∫p t·ªëi ∆∞u vi·ªác ch·ªânh s·ª≠a chu·ªói.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> stringBuilder <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  stringBuilder<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'Hello World'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> result <span class="token operator">=</span> stringBuilder<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="Combo"><a href="#Combo" class="headerlink" title="Combo"></a>Combo</h2><p>C√°ch n√†y l√† m·ªôt c√°ch t√† ƒë·∫°o c·ªßa array, d√πng k·∫øt h·ª£p array + dictionary. V√≠ d·ª• b·∫°n c√≥ m·ªôt h√†m t√¨m ki·∫øm theo ƒëi·ªÅu ki·ªán sau ƒë√≥ tr·∫£ v·ªÅ danh s√°ch k·∫øt qu·∫£ t√¨m ƒë∆∞·ª£c v√† th·ª© t·ª± c·ªßa c√°c ph·∫ßn t·ª≠ ƒë√≥ trong danh s√°ch ban ƒë·∫ßu</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> userTable <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> face<span class="token punctuation">:</span> <span class="token string">'üòç'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> face<span class="token punctuation">:</span> <span class="token string">'üò≠'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> face<span class="token punctuation">:</span> <span class="token string">'üò°'</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// c√°ch truy·ªÅn th·ªëng</span><span class="token keyword">function</span> <span class="token function">findUsers</span><span class="token punctuation">(</span>predicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> indexes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> users <span class="token operator">=</span> userTable<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">predicate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      indexes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span> users<span class="token punctuation">,</span> indexes <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">findUsers</span><span class="token punctuation">(</span>user <span class="token operator">=</span><span class="token operator">></span> user<span class="token punctuation">.</span>face <span class="token operator">===</span> <span class="token string">'üòç'</span> <span class="token operator">||</span> user<span class="token punctuation">.</span>face <span class="token operator">===</span> <span class="token string">'üò°'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [ { face: 'üòç' }, { face: 'üò°' } ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>indexes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [0, 2]</span><span class="token comment" spellcheck="true">// c√°ch t√† ƒë·∫°o üòà</span><span class="token keyword">function</span> <span class="token function">findUsers</span><span class="token punctuation">(</span>predicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> indexes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> users <span class="token operator">=</span> userTable<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">predicate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      indexes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  users<span class="token punctuation">.</span>indexes <span class="token operator">=</span> indexes<span class="token punctuation">;</span>  <span class="token keyword">return</span> users<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">findUsers</span><span class="token punctuation">(</span>user <span class="token operator">=</span><span class="token operator">></span> user<span class="token punctuation">.</span>face <span class="token operator">===</span> <span class="token string">'üòç'</span> <span class="token operator">||</span> user<span class="token punctuation">.</span>face <span class="token operator">===</span> <span class="token string">'üò°'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [ { face: 'üòç' }, { face: 'üò°' } ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>indexes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [0, 2]</span></code></pre><p>T·ªïng k·∫øt l·∫°i th√¨ JS trang b·ªã m·ªôt ki·ªÉu array qu√° b√° ƒë·∫°o, n√≥ c√≥ th·ªÉ ƒë·∫£m nhi·ªám nhi·ªÅu ch·ª©c nƒÉng c·ªßa nh·ªØng ki·ªÉu d·ªØ li·ªáu kh√°c nhau. V·∫´n c√¢u n√≥i c≈©: Tuy ƒë∆°n gi·∫£n nh∆∞ng kh√¥ng k√©m ph·∫ßn ph·ª©c t·∫°p üòÉ<br><em>B√†i vi·∫øt thu·ªôc v·ªÅ <a href="https://www.facebook.com/groups/jsland/" target="_blank" rel="noopener">Jsland (C·ªông ƒë·ªìng Javascript l·ªõn nh·∫•t Vi·ªát Nam)</a></em></p>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
