<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Console kh√¥ng ch·ªâ c√≥ ph∆∞∆°ng th·ª©c log</title>
      <link href="/2018/09/14/console-khong-chi-co-phuong-thuc-log/"/>
      <url>/2018/09/14/console-khong-chi-co-phuong-thuc-log/</url>
      <content type="html"><![CDATA[<p><img src="https://i.imgur.com/Apty4iQ.png" alt=""></p><blockquote><p>Console l√† m·ªôt c√¥ng c·ª• r·∫•t ƒë·∫Øc l·ª±c h·ªó tr·ª£ ch√∫ng ta trong qu√° tr√¨nh ph√°t tri·ªÉn ·ª©ng d·ª•ng, ƒë·∫∑c bi·ªát l√† trong kh√¢u debug. Ph∆∞∆°ng th·ª©c ƒë∆∞·ª£c ch√∫ng ta s·ª≠ d·ª•ng nhi·ªÅu nh·∫•t c√≥ l·∫Ω l√† console.log, d√πng ƒë·ªÉ in gi√° tr·ªã ra m√†n h√¨nh console. Tuy nhi√™n, console c√≤n c√≥ r·∫•t nhi·ªÅu ph∆∞∆°ng th·ª©c kh√°c th√∫ v·ªã m√† c≈©ng h·ªØu √≠ch kh√¥ng k√©m. H√£y c√πng CodeLabo t√¨m hi·ªÉu trong b√†i vi·∫øt n√†y nh√©!</p></blockquote><h2 id="Logging"><a href="#Logging" class="headerlink" title="Logging"></a>Logging</h2><p>Nh∆∞ ƒë√£ n√≥i ·ªü tr√™n, ch√∫ng ta s·ª≠ d·ª•ng <code>console.log</code> ƒë·ªÉ in gi√° tr·ªã ra m√†n h√¨nh console.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">'CodeLabo'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hello'</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Hello CodeLabo</span></code></pre><p>Tuy nhi√™n, console c√≤n c√≥ 3 ph∆∞∆°ng th·ª©c kh√°c d√πng ƒë·ªÉ in gi√° tr·ªã ra m√†n h√¨nh l√† <code>warn</code>, <code>info</code>, <code>error</code>.</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">'CodeLabo - more experiments, more knowledge'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">'H√£y like Facebook Page c·ªßa CodeLabo nh√©!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'ƒê·ª´ng qu√™n share cho m·ªçi ng∆∞·ªùi c√πng bi·∫øt nha!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://i.imgur.com/CFHQbkl.png" alt=""><br>Ngo√†i vi·ªác in gi√° tr·ªã, <code>warn</code> v√† <code>error</code> c√≤n c√≥ style kh√°c v√† cho ch√∫ng ta bi·∫øt stack trace, gi√∫p b·∫°n x√°c ƒë·ªãnh l·ªói xu·∫•t hi·ªán ·ªü ƒë√¢u trong tr∆∞·ªùng h·ª£p x·∫£y ra l·ªói.</p><p>Ch√∫ng ta c≈©ng c√≥ th·ªÉ in ra stack trace b·∫±ng c√°ch s·ª≠ d·ª•ng <code>console.trace</code>.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">hello</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">'CodeLabo'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">'name:'</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token string">`Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!`</span></span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://i.imgur.com/74cc1Ny.png" alt=""></p><h2 id="console-dir-amp-amp-console-dirxml"><a href="#console-dir-amp-amp-console-dirxml" class="headerlink" title="console.dir &amp;&amp; console.dirxml"></a>console.dir &amp;&amp; console.dirxml</h2><p><code>console.dir</code> in ra object sau khi ƒë√£ ƒë∆∞·ª£c format ƒë·∫πp ƒë·∫Ω.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> fancyThings <span class="token operator">=</span> <span class="token punctuation">{</span>  car<span class="token punctuation">:</span> <span class="token string">'üèéÔ∏è Ferrari'</span><span class="token punctuation">,</span>  watch<span class="token punctuation">:</span> <span class="token string">'‚åö Cartier'</span><span class="token punctuation">,</span>  clothing<span class="token punctuation">:</span> <span class="token punctuation">{</span>    shoes<span class="token punctuation">:</span> <span class="token string">'üë† Christian Louboutin'</span><span class="token punctuation">,</span>    dress<span class="token punctuation">:</span> <span class="token string">'üëó Versace'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  boat<span class="token punctuation">:</span> <span class="token string">'üõ•Ô∏è Sunseeker'</span><span class="token punctuation">}</span>console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>fancyThings<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://i.imgur.com/1uwibZr.png" alt=""><br>C√≤n <code>console.dirxml</code> th√¨ in ra markup c·ªßa DOM element. V√≠ d·ª•:</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">    console<span class="token punctuation">.</span><span class="token function">dirxml</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p><img src="https://i.imgur.com/KITpc0Y.png" alt=""></p><h2 id="console-assert"><a href="#console-assert" class="headerlink" title="console.assert"></a>console.assert</h2><p><code>console.assert</code> s·∫Ω nh·∫≠n 2 tham s·ªë. N·∫øu tham s·ªë th·ª© nh·∫•t tr·∫£ v·ªÅ false, tham s·ªë th·ª© 2 s·∫Ω ƒë∆∞·ª£c in ra m√†n h√¨nh.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 1 + 1 == 2, tr·∫£ v·ªÅ true, kh√¥ng c√≥ g√¨ ƒë∆∞·ª£c in ra c·∫£</span>console<span class="token punctuation">.</span><span class="token function">assert</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'1 + 1 kh√°c 2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 1 + 1 == 3 tr·∫£ v·ªÅ false, '1 + 1 kh√°c 3' s·∫Ω ƒë∆∞·ª£c in ra</span>console<span class="token punctuation">.</span><span class="token function">assert</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'1 + 1 kh√°c 3'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="console-clear"><a href="#console-clear" class="headerlink" title="console.clear"></a>console.clear</h2><p>D√πng ƒë·ªÉ clear console.</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="console-count"><a href="#console-count" class="headerlink" title="console.count"></a>console.count</h2><p>Ch√∫ng ra d√πng ph∆∞∆°ng th·ª©c n√†y ƒë·ªÉ ƒë·∫øm s·ªë l·∫ßn ph∆∞∆°ng th·ª©c n√†y ƒë∆∞·ª£c g·ªçi.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>nb <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>nb <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token string">'ch·∫µn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token string">'l·∫ª'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// l·∫ª: 1</span><span class="token comment" spellcheck="true">// ch·∫µn: 1</span><span class="token comment" spellcheck="true">// l·∫ª: 2</span><span class="token comment" spellcheck="true">// ch·∫µn: 2</span><span class="token comment" spellcheck="true">// l·∫ª: 3</span></code></pre><h2 id="Dem-gio"><a href="#Dem-gio" class="headerlink" title="ƒê·∫øm gi·ªù"></a>ƒê·∫øm gi·ªù</h2><p>D√πng <code>console.time</code> ƒë·ªÉ b·∫Øt ƒë·∫ßu v√† <code>console.endTime</code> ƒë·ªÉ k·∫øt th√∫c timer. Ta c√≥ th·ªÉ truy·ªÅn v√†o 1 string l√†m t√™n cho timer. T√™n trong <code>console.time</code> ph·∫£i tr√πng kh·ªõp v·ªõi tr√™n trong <code>console.endTime</code>.</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">'fetching data'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://jsonplaceholder.typicode.com/users'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>d <span class="token operator">=</span><span class="token operator">></span> d<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">'fetching data'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// fetching data: 0.2939453125ms</span><span class="token comment" spellcheck="true">// (10) [{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]</span></code></pre><h2 id="Group"><a href="#Group" class="headerlink" title="Group"></a>Group</h2><p>S·ª≠ d·ª•ng <code>console.group</code> v√† <code>console.groupEnd</code> ƒë·ªÉ nh√≥m c√°c gi√° tr·ªã trong output l·∫°i v·ªõi nhau. Ta c≈©ng c√≥ th·ªÉ ƒë·∫∑t t√™n cho c√°c group, v√† group n√†y c√≥ th·ªÉ n·∫±m trong group kh√°c.</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'üñçÔ∏è colors'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'green'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'orange'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'HEX'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'#1AB374'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'#FF7B5F'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">groupEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">groupEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://i.imgur.com/MU67pR4.png" alt=""></p><h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><p>Ph∆∞∆°ng th·ª©c <code>console.table</code> gi√∫p ch√∫ng ta hi·ªÉn th·ªã array ho·∫∑c object d∆∞·ªõi d·∫°ng table.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Single</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> singer<span class="token punctuation">,</span>  year<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>singer <span class="token operator">=</span> singer<span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>year <span class="token operator">=</span> year<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> catena <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Single</span><span class="token punctuation">(</span>    <span class="token string">"C√≥ ai th∆∞∆°ng em nh∆∞ anh"</span><span class="token punctuation">,</span>    <span class="token string">"T√≥c Ti√™n"</span><span class="token punctuation">,</span>    <span class="token string">"2018"</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>catena<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://i.imgur.com/bvADKK4.png" alt=""></p><h2 id="Su-dung-CSS-Style"><a href="#Su-dung-CSS-Style" class="headerlink" title="S·ª≠ d·ª•ng CSS Style"></a>S·ª≠ d·ª•ng CSS Style</h2><p>Ta c√≥ th·ªÉ √°p d·ª•ng style trong <code>console.log</code> b·∫±ng c√°ch d√πng d·∫•u ph√¢n c√°ch <code>%c</code>.</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hello %cCodeLabo%c!'</span><span class="token punctuation">,</span><span class="token string">'color: #1AB374; font-weight: bold; font-size: 2rem; text-shadow: 0 0 5px rgba(0,0,0,0.2);'</span><span class="token punctuation">,</span><span class="token string">'color: FF7B5F; font-weight: bold; font-size: 2rem; text-shadow: 0 0 5px rgba(0,0,0,0.2);'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>V√† ƒë√¢y l√† k·∫øt qu·∫£:<br><img src="https://i.imgur.com/z5XSSC8.png" alt=""><br>Style trong tham s·ªë th·ª© 2 s·∫Ω ƒë∆∞·ª£c √°p d·ª•ng cho nh·ªØng gi√° tr·ªã ƒë·∫±ng sau d·∫•u <code>%c</code> th·ª© nh·∫•t, style ti·∫øp theo s·∫Ω ƒë∆∞·ª£c √°p d·ª•ng cho nh·ªØng gi√° tr·ªã ƒë·∫±ng sau d·∫•u <code>%c</code> th·ª© hai, v√† c·ª© th·∫ø‚Ä¶</p>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> devtools </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>for...of v√† for...in trong Javascript</title>
      <link href="/2018/09/13/for-of-va-for-in-trong-js/"/>
      <url>/2018/09/13/for-of-va-for-in-trong-js/</url>
      <content type="html"><![CDATA[<blockquote><p><code>for...of</code> v√† <code>for...in</code> trong Javascript cho ph√©p ch√∫ng ta vi·∫øt nh·ªØng v√≤ng l·∫∑p <code>for</code> m·ªôt c√°ch r·∫•t g·ªçn g√†ng, s√∫c t√≠ch. N·∫øu b·∫°n v·∫´n ph√¢n v√¢n ch∆∞a bi·∫øt khi n√†o th√¨ d√πng <code>for...of</code>, khi n√†o d√πng <code>for...in</code> th√¨ b√†i vi·∫øt n√†y s·∫Ω gi√∫p b·∫°n c√≥ m·ªôt s·ª± ph√¢n bi·ªát r√µ r√†ng h∆°n ƒë·∫•y!</p></blockquote><h2 id="for‚Ä¶of"><a href="#for‚Ä¶of" class="headerlink" title="for‚Ä¶of"></a>for‚Ä¶of</h2><p>Ch√∫ng ta s·ª≠ d·ª•ng <code>for...of</code> ƒë·ªÉ duy·ªát qua c√°c gi√° tr·ªã trong ki·ªÉu <code>iterable</code>, v√≠ d·ª• nh∆∞ array.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'üêî'</span><span class="token punctuation">,</span> <span class="token string">'üê∑'</span><span class="token punctuation">,</span> <span class="token string">'üêë'</span><span class="token punctuation">,</span> <span class="token string">'üêá'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">let</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Gertrude'</span><span class="token punctuation">,</span> <span class="token string">'Henry'</span><span class="token punctuation">,</span> <span class="token string">'Melvin'</span><span class="token punctuation">,</span> <span class="token string">'Billy Bob'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> animal <span class="token keyword">of</span> animals<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// Random name for our animal</span>  <span class="token keyword">let</span> nameIdx <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> names<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>names<span class="token punctuation">[</span>nameIdx<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>animal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// Henry the üêî</span><span class="token comment" spellcheck="true">// Melvin the üê∑</span><span class="token comment" spellcheck="true">// Henry the üêë</span><span class="token comment" spellcheck="true">// Billy Bob the üêá</span></code></pre><p>String c≈©ng thu·ªôc ki·ªÉu <code>iterable</code>, n√™n ch√∫ng ta c≈©ng c√≥ th·ªÉ d√πng <code>for...of</code> cho string.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'abcde'</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> char <span class="token keyword">of</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>char<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// AAA</span><span class="token comment" spellcheck="true">// BBB</span><span class="token comment" spellcheck="true">// ...</span></code></pre><p>Ngo√†i ra, <code>for...of</code> c√≤n c√≥ th·ªÉ d√πng ƒë·ªÉ duy·ªát qua <code>map</code>, <code>set</code>, <code>generator</code>, <code>DOM collection</code>, <code>arguments object</code>.</p><h2 id="for‚Ä¶in"><a href="#for‚Ä¶in" class="headerlink" title="for‚Ä¶in"></a>for‚Ä¶in</h2><p>Ch√∫ng ta s·ª≠ d·ª•ng <code>for...in</code> ƒë·ªÉ duy·ªát qua c√°c <code>property</code> c·ªßa object.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> iphoneXS <span class="token operator">=</span> <span class="token punctuation">{</span>  cpu<span class="token punctuation">:</span> <span class="token string">'Apple A12  Bionic'</span><span class="token punctuation">,</span>  rom<span class="token punctuation">:</span> <span class="token string">'512 GB'</span><span class="token punctuation">,</span>  camera<span class="token punctuation">:</span> <span class="token string">'12MP'</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> iphoneXS<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>iphoneXS<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*cpu: Apple A12 Bionicrom: 512 GBcamera: 12MP*/</span></code></pre><p>Ch√∫ng ta c≈©ng s·ª≠ d·ª•ng <code>for...in</code> ƒë·ªÉ duy·ªát qua c√°c index c·ªßa ki·ªÉu iterable, nh∆∞ array hay string.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">'CodeLabo'</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token keyword">in</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Index of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>str<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*Index of C: 0Index of o: 1...*/</span></code></pre>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gi·ªõi thi·ªáu v·ªÅ Set trong Javascript</title>
      <link href="/2018/09/12/gioi-thieu-ve-set-trong-javascript/"/>
      <url>/2018/09/12/gioi-thieu-ve-set-trong-javascript/</url>
      <content type="html"><![CDATA[<blockquote><p>Set l√† m·ªôt ki·ªÉu object m·ªõi trong ES6 (ES2015), d√πng ƒë·ªÉ l∆∞u tr·ªØ c√°c gi√° tr·ªã kh√¥ng tr√πng l·∫∑p. Set c√≥ th·ªÉ ch·ª©a b·∫•t k√¨ ki·ªÉu gi√° tr·ªã n√†o, g·ªìm c√°c gi√° tr·ªã <em>primitive</em> (string, number, boolean, null, undefined, symbol) hay th·∫≠m ch√≠ l√† object literal ho·∫∑c array.</p></blockquote><p>Sau ƒë√¢y l√† v√≠ d·ª• v·ªÅ m·ªôt set ƒë∆°n gi·∫£n v·ªõi m·ªôt s·ªë ph∆∞∆°ng th·ª©c c·ªßa set nh∆∞ <code>add</code>, <code>size</code>, <code>has</code>, <code>forEach</code>, <code>delete</code> v√† <code>clear</code>:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üê±'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üê∂'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üêî'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üê∑'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'üê∂'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'üê∑'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// true</span>animals<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">'üê∑'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'üê∑'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// false</span>animals<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>animal <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Hey </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>animal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*Hey üê±!Hey üê∂!Hey üêî!Hey üê∑!*/</span>animals<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 0</span></code></pre><p>D∆∞·ªõi ƒë√¢y ti·∫øp t·ª•c l√† m·ªôt v√≠ d·ª• kh√°c v·ªÅ set. ·ªû ƒë√¢y, ch√∫ng ta truy·ªÅn v√†o m·ªôt array ƒë·ªÉ kh·ªüi t·∫°o set. H√£y ch√∫ √Ω v√†o array ƒë·∫ßu ti√™n: do ch·ª©a c√°c gi√° tr·ªã tr√πng l·∫∑p n√™n kh√¥ng ƒë∆∞·ª£c gi·ªØ nguy√™n ki·ªÉu array m√† ƒë√£ b·ªã t√°ch th√†nh 2 gi√° tr·ªã kh√¥ng tr√πng l·∫∑p. Array ti·∫øp theo do ch·ª©a c√°c gi√° tr·ªã kh√¥ng tr√πng l·∫∑p n√™n v·∫´n ƒë∆∞·ª£c gi·ªØ nguy√™n ki·ªÉu array.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> myAnimals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'üê∑'</span><span class="token punctuation">,</span> <span class="token string">'üê¢'</span><span class="token punctuation">,</span> <span class="token string">'üê∑'</span><span class="token punctuation">,</span> <span class="token string">'üê∑'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myAnimals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'üê®'</span><span class="token punctuation">,</span> <span class="token string">'üêë'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myAnimals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'Turtle'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">'üê¢'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myAnimals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>myAnimals<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>animal <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*üê∑üê¢["üê®", "üêë"]Object { name: "Turtle", type: "üê¢" }*/</span></code></pre><p>String l√† ki·ªÉu iterable n√™n c≈©ng c√≥ th·ªÉ truy·ªÅn v√†o ƒë·ªÉ kh·ªüi t·∫°o set.</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Trong set n√†y ch·ªâ g·ªìm nh·ªØng k√≠ t·ª± kh√°c nhau'</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 43</span><span class="token keyword">let</span> sentence <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">'Trong set n√†y ch·ªâ g·ªìm nh·ªØng k√≠ t·ª± kh√°c nhau'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sentence<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 23</span></code></pre><p>Trong nh·ªØng v√≠ d·ª• tr√™n, ch√∫ng ta ƒë√£ s·ª≠ d·ª•ng <code>forEach</code> ƒë·ªÉ duy·ªát qua c√°c gi√° tr·ªã trong set. Ngo√†i ra, ch√∫ng ta c≈©ng c√≥ th·ªÉ s·ª≠ d·ª•ng <code>for...of</code>.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> moreAnimals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'üêò '</span><span class="token punctuation">,</span> <span class="token string">'üê¥'</span><span class="token punctuation">,</span> <span class="token string">'üêï'</span><span class="token punctuation">,</span> <span class="token string">'üêá'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> animal <span class="token keyword">of</span> moreAnimals<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Hi </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> animal <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*Hi üêòHi üê¥Hi üêïHi üêá*/</span></code></pre><p>Set c√≤n c√≥ ph∆∞∆°ng th·ª©c <code>keys</code> v√† <code>values</code>, v√† hai ph∆∞∆°ng th·ª©c n√†y ƒë·ªÅu tr·∫£ v·ªÅ m·ªôt SetIterator ch·ª©a c√°c gi√° tr·ªã trong set.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> garden <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'üå∑'</span><span class="token punctuation">,</span> <span class="token string">'üåπ'</span><span class="token punctuation">,</span> <span class="token string">'üåª'</span><span class="token punctuation">,</span> <span class="token string">'üå∑'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> flowers <span class="token operator">=</span> garden<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ‚ñ∂ SetIterator {"üå∑", "üåπ", "üåª"}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>done<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*‚ñ∂ {value: "üå∑", done: false}‚ñ∂ {value: "üåπ", done: false}false*/</span></code></pre>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nh·ªØng c√∫ ph√°p ƒë·∫∑c bi·ªát c·ªßa Javascript</title>
      <link href="/2018/09/11/nhung-cu-phap-dac-biet-cua-js/"/>
      <url>/2018/09/11/nhung-cu-phap-dac-biet-cua-js/</url>
      <content type="html"><![CDATA[<blockquote><p>Trong b√†i vi·∫øt n√†y, ch√∫ng ta s·∫Ω n√≥i v·ªÅ nh·ªØng th·ª© m√† ai c≈©ng v·∫≠y ‚ÄúNh∆∞ng JS th√¨ kh√¥ng‚Äù</p></blockquote><h2 id="Lenh-gan-co-the-o-khap-moi-noi"><a href="#Lenh-gan-co-the-o-khap-moi-noi" class="headerlink" title="L·ªánh g√°n c√≥ th·ªÉ ·ªü kh·∫Øp m·ªçi n∆°i"></a>L·ªánh g√°n c√≥ th·ªÉ ·ªü kh·∫Øp m·ªçi n∆°i</h2><p>Th√¥ng th∆∞·ªùng nh·ªØng ng√¥n ng·ªØ kh√°c s·∫Ω c·ªë ƒë·ªãnh l·ªánh g√°n ph·∫£i n·∫±m ri√™ng bi·ªát tr√™n 1 d√≤ng l·ªánh, nh∆∞ng JS th√¨ kh√¥ng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token keyword">const</span> a <span class="token operator">=</span> window<span class="token punctuation">.</span>myCache <span class="token operator">||</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>myCache <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç ‚Äç‚Äç‚Äç‚Äç‚Äç‚Äç<span class="token function">functionCall</span><span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>‚Äç‚Äç‚Äç</p><h2 id="Rut-gon-dieu-kien-true-false"><a href="#Rut-gon-dieu-kien-true-false" class="headerlink" title="R√∫t g·ªçn ƒëi·ªÅu ki·ªán true/false"></a>R√∫t g·ªçn ƒëi·ªÅu ki·ªán true/false</h2><p>JS xem nh·ªØng bi·ªÉu th·ª©c <code>null</code>, <code>undefined</code>, chu·ªói r·ªóng, s·ªë 0 t∆∞∆°ng ƒë∆∞∆°ng v·ªõi <code>false</code><br>V√† xem s·ªë kh√°c 0, chu·ªói kh√¥ng r·ªóng, object b·∫•t k·ª≥ t∆∞∆°ng ƒë∆∞∆°ng <code>true</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>a <span class="token operator">===</span> <span class="token number">0</span>  <span class="token operator">||</span> a <span class="token operator">===</span> <span class="token keyword">null</span>  <span class="token operator">||</span> a <span class="token operator">===</span> undefined  <span class="token operator">||</span> a <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// c√≥ th·ªÉ r√∫t g·ªçn th√†nh</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span></code></pre><h2 id="Bieu-thuc-amp-amp-va-khong-tra-ve-true-false"><a href="#Bieu-thuc-amp-amp-va-khong-tra-ve-true-false" class="headerlink" title="Bi·ªÉu th·ª©c &amp;&amp; v√† || kh√¥ng tr·∫£ v·ªÅ true/false"></a>Bi·ªÉu th·ª©c &amp;&amp; v√† || kh√¥ng tr·∫£ v·ªÅ true/false</h2><p>C√°c ng√¥n ng·ªØ kh√°c m·∫∑c ƒë·ªãnh r·∫±ng k·∫øt h·ª£p &amp;&amp; ho·∫∑c || s·∫Ω lu√¥n l√† true/false nh∆∞ng JS th√¨ kh√¥ng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">const</span> length <span class="token operator">=</span> itemChanged <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// n·∫øu itemChanged l√† false th√¨ length = false;</span><span class="token comment" spellcheck="true">// n·∫øu itemChanged l√† true th√¨ length l√† array.length;</span><span class="token keyword">function</span> <span class="token function">plugin</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>  options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// n·∫øu options ch∆∞a kh·ªüi t·∫°o th√¨ g√°n options b·∫±ng {}</span>  <span class="token comment" spellcheck="true">// ng∆∞·ª£c l·∫°i th√¨ v·∫´n d√πng l·∫°i gi√° tr·ªã options</span><span class="token punctuation">}</span></code></pre><h2 id="Dung-bitwise-operator-de-nhan-hoac-chia"><a href="#Dung-bitwise-operator-de-nhan-hoac-chia" class="headerlink" title="D√πng bitwise operator ƒë·ªÉ nh√¢n ho·∫∑c chia"></a>D√πng bitwise operator ƒë·ªÉ nh√¢n ho·∫∑c chia</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token number">100</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">200</span><span class="token number">100</span> <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">400</span><span class="token number">100</span> <span class="token operator">></span><span class="token operator">></span> <span class="token number">1</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">50</span><span class="token number">100</span> <span class="token operator">></span><span class="token operator">></span> <span class="token number">2</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">25</span></code></pre><h2 id="Dung-switch-thay-the-nhieu-if-phuc-tap"><a href="#Dung-switch-thay-the-nhieu-if-phuc-tap" class="headerlink" title="D√πng switch thay th·∫ø nhi·ªÅu if ph·ª©c t·∫°p"></a>D√πng switch thay th·∫ø nhi·ªÅu if ph·ª©c t·∫°p</h2><p>M·ªôt s·ªë ng√¥n ng·ªØ ch·ªâ cho ph√©p case ch·ª©a nh·ªØng primitive value, nh∆∞ng JS th√¨ kh√¥ng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// do something 1</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// do something 2</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// do something 3</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// c√≥ th·ªÉ chuy·ªÉn th√†nh</span><span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">case</span> a<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">// do something 1</span>  <span class="token keyword">case</span> b<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">// do something 2</span>  <span class="token keyword">default</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">// do something 3</span><span class="token punctuation">}</span></code></pre><p><em>B√†i vi·∫øt thu·ªôc v·ªÅ <a href="https://www.facebook.com/groups/jsland/" target="_blank" rel="noopener">Jsland (C·ªông ƒë·ªìng Javascript l·ªõn nh·∫•t Vi·ªát Nam)</a></em></p>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Array kh√¥ng ch·ªâ l√† array</title>
      <link href="/2018/09/10/array-khong-chi-la-array/"/>
      <url>/2018/09/10/array-khong-chi-la-array/</url>
      <content type="html"><![CDATA[<blockquote><p>H·∫ßu h·∫øt c√°c ng√¥n ng·ªØ ƒë·ªÅu trang b·ªã ki·ªÉu array ƒë·ªÉ x·ª≠ l√≠, l∆∞u tr·ªØ nhi·ªÅu ph·∫ßn t·ª≠ c√πng l√∫c, JS c≈©ng kh√¥ng ngo·∫°i l·ªá. Nh∆∞ng array trong JS kh√¥ng ch·ªâ ƒë∆°n gi·∫£n l√† array.</p></blockquote><p>Ch√∫ng ta c√≥ th·ªÉ d√πng array l√†m:</p><ul><li>Array (ƒë∆∞∆°ng nhi√™n)</li><li>Stack</li><li>Queue</li><li>Dictionary</li><li>Sortable List</li><li>String Builder</li><li>Commbo</li></ul><h2 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h2><p>Ch√∫ng ta c√≥ th·ªÉ d√πng array nh∆∞ 1 stack, ƒë·∫∑c t√≠nh c·ªßa stack l√† LIFO (ƒëi tr·ªÖ v·ªÅ s·ªõm). C√≥ 2 method ƒë·ªÉ l√†m chuy·ªán n√†y l√† <code>push</code> v√† <code>pop</code>.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3, 4]</span>array<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span></code></pre><h2 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h2><p>S·ª≠ d·ª•ng array nh∆∞ 1 queue c≈©ng c√≥ 2 method l√† <code>unshift</code> (enqueue), <code>shift</code> (dequeue) ƒë·ªÉ ƒë·∫£m b·∫£o ƒë·∫∑c t√≠nh FIFO (ƒëi s·ªõm v·ªÅ s·ªõm)</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [2, 3]</span>array<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span></code></pre><h2 id="Dictionary"><a href="#Dictionary" class="headerlink" title="Dictionary"></a>Dictionary</h2><p>D√πng array nh∆∞ m√¥t Dictionary c√≥ h∆°i mi·ªÖn c∆∞·ª°ng nh∆∞ng ok, fine, n√≥ v·∫´n ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ‚ñ∂ (3) [1, 2, 3]</span>array<span class="token punctuation">[</span><span class="token string">'$key1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ‚ñ∂ (3) [1, 2, 3, $key1: 1]</span>array<span class="token punctuation">.</span>$key2 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ‚ñ∂ (3) [1, 2, 3, $key1: 1, $key2: 2]</span><span class="token keyword">delete</span> array<span class="token punctuation">.</span>$key2<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 2, 3]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// ‚ñ∂ (3) [1, 2, 3, $key1: 1]</span></code></pre><p>Nh∆∞ c√°c b·∫°n ƒë√£ th·∫•y, vi·ªác thao t√°c tr√™n key c√≥ 2 ƒëi·ªÉm c·∫ßn l∆∞u √Ω, key ph·∫£i th√™m k√Ω t·ª± ph√¢n bi·ªát n√†o ƒë√≥ ƒë·ªÉ tr√°nh tr√πng t√™n v·ªõi nh·ªØng prop/method c·ªßa array, ·ªü ƒë√¢y m√¨nh d√πng d·∫•u $. Th·ª© hai l√† vi·ªác th√™m hay x√≥a key kh√¥ng l√†m thay ƒë·ªïi s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ trong array. Mu·ªën duy·ªát key th√¨ d√πng</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*012$key1*/</span></code></pre><h2 id="Sortable-List"><a href="#Sortable-List" class="headerlink" title="Sortable List"></a>Sortable List</h2><p>D√πng array nh∆∞ sortable list kh√° ƒë∆°n gi·∫£n, b·∫£n th√¢n method <code>sort</code> c·ªßa array l√† mutable n√™n m·ªói l·∫ßn th√™m item m·ªõi v√†o th√¨ ch√∫ng ta <code>sort</code> l·∫°i</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [5, 6, 7, 1]</span>array<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [1, 5, 6, 7]</span></code></pre><h2 id="String-Builder"><a href="#String-Builder" class="headerlink" title="String Builder"></a>String Builder</h2><p>Array c√≤n ƒë∆∞·ª£c s·ª≠ d·ª•ng nh∆∞ String Builder, ƒëa s·ªë ng√¥n ng·ªØ l·∫≠p tr√¨nh, vi·ªác n·ªëi chu·ªói m·∫•t kh√° nhi·ªÅu b·ªô nh·ªõ v√† ch·∫≠m, vi m·ªói l·∫ßn n·ªëi chu·ªói th√¨ h·ªá th·ªëng ph·∫£i c·∫•p ph√°t v√πng nh·ªõ m·ªõi r·ªông h∆°n, ·ª©ng v·ªõi ƒë·ªô d√†i chu·ªói c·ªß v√† m·ªõi c·ªông l·∫°i, sau ƒë√≥ sao ch√©p c·∫£ 2 v√†o ƒë√≥. N√™n x·ª≠ l√Ω chu·ªói nhi·ªÅu c√≥ th·ªÉ l√†m ch·∫≠m h·ªá th·ªëng, v√¨ v·∫≠y String Builder ra ƒë·ªùi, gi√∫p t·ªëi ∆∞u vi·ªác ch·ªânh s·ª≠a chu·ªói.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> stringBuilder <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  stringBuilder<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'Hello World'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> result <span class="token operator">=</span> stringBuilder<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="Combo"><a href="#Combo" class="headerlink" title="Combo"></a>Combo</h2><p>C√°ch n√†y l√† m·ªôt c√°ch t√† ƒë·∫°o c·ªßa array, d√πng k·∫øt h·ª£p array + dictionary. V√≠ d·ª• b·∫°n c√≥ m·ªôt h√†m t√¨m ki·∫øm theo ƒëi·ªÅu ki·ªán sau ƒë√≥ tr·∫£ v·ªÅ danh s√°ch k·∫øt qu·∫£ t√¨m ƒë∆∞·ª£c v√† th·ª© t·ª± c·ªßa c√°c ph·∫ßn t·ª≠ ƒë√≥ trong danh s√°ch ban ƒë·∫ßu</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">const</span> userTable <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> face<span class="token punctuation">:</span> <span class="token string">'üòç'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> face<span class="token punctuation">:</span> <span class="token string">'üò≠'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> face<span class="token punctuation">:</span> <span class="token string">'üò°'</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// c√°ch truy·ªÅn th·ªëng</span><span class="token keyword">function</span> <span class="token function">findUsers</span><span class="token punctuation">(</span>predicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> indexes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> users <span class="token operator">=</span> userTable<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">predicate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      indexes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span> users<span class="token punctuation">,</span> indexes <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">findUsers</span><span class="token punctuation">(</span>user <span class="token operator">=</span><span class="token operator">></span> user<span class="token punctuation">.</span>face <span class="token operator">===</span> <span class="token string">'üòç'</span> <span class="token operator">||</span> user<span class="token punctuation">.</span>face <span class="token operator">===</span> <span class="token string">'üò°'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [ { face: 'üòç' }, { face: 'üò°' } ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>indexes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [0, 2]</span><span class="token comment" spellcheck="true">// c√°ch t√† ƒë·∫°o üòà</span><span class="token keyword">function</span> <span class="token function">findUsers</span><span class="token punctuation">(</span>predicate<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> indexes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> users <span class="token operator">=</span> userTable<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">predicate</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      indexes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  users<span class="token punctuation">.</span>indexes <span class="token operator">=</span> indexes<span class="token punctuation">;</span>  <span class="token keyword">return</span> users<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">findUsers</span><span class="token punctuation">(</span>user <span class="token operator">=</span><span class="token operator">></span> user<span class="token punctuation">.</span>face <span class="token operator">===</span> <span class="token string">'üòç'</span> <span class="token operator">||</span> user<span class="token punctuation">.</span>face <span class="token operator">===</span> <span class="token string">'üò°'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [ { face: 'üòç' }, { face: 'üò°' } ]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>indexes<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// => [0, 2]</span></code></pre><p>T·ªïng k·∫øt l·∫°i th√¨ JS trang b·ªã m·ªôt ki·ªÉu array qu√° b√° ƒë·∫°o, n√≥ c√≥ th·ªÉ ƒë·∫£m nhi·ªám nhi·ªÅu ch·ª©c nƒÉng c·ªßa nh·ªØng ki·ªÉu d·ªØ li·ªáu kh√°c nhau. V·∫´n c√¢u n√≥i c≈©: Tuy ƒë∆°n gi·∫£n nh∆∞ng kh√¥ng k√©m ph·∫ßn ph·ª©c t·∫°p üòÉ<br><em>B√†i vi·∫øt thu·ªôc v·ªÅ <a href="https://www.facebook.com/groups/jsland/" target="_blank" rel="noopener">Jsland (C·ªông ƒë·ªìng Javascript l·ªõn nh·∫•t Vi·ªát Nam)</a></em></p>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
