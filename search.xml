<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Viết desktop app với Electron - Hello world</title>
      <link href="/2018/09/11/viet-desktop-app-voi-electron-hello-world/"/>
      <url>/2018/09/11/viet-desktop-app-voi-electron-hello-world/</url>
      <content type="html"><![CDATA[<h3 id="Gioi-Thieu"><a href="#Gioi-Thieu" class="headerlink" title="Giới Thiệu"></a>Giới Thiệu</h3><p><a href="https://electronjs.org/" target="_blank" rel="noopener">Electron</a> là framework (open source bởi Github) cho phép viết desktop app chạy trên mọi nền tảng (Mac, Window, Linux) dựa trên công nghệ web (Node.js, HTML và CSS). Electron không phải là thư viện để xây dựng giao diện người dùng (GUI) cho Javascript, thay vào đó, Electron sử dụng chính trang web làm GUI, hay bạn có thể hiểu Electron là một trình duyệt web Chromium.<br>Bạn có thể xem <a href="https://electronjs.org/apps" target="_blank" rel="noopener">danh sách các ứng dựng được xây dựng từ Electron</a> để thấy được sự mạnh mẽ của framework này.</p><blockquote><p>2 editor phổ biến <a href="https://electronjs.org/apps/visual-studio-code" target="_blank" rel="noopener">VSCode</a> và <a href="https://electronjs.org/apps/atom" target="_blank" rel="noopener">Atom</a>, hay ứng dụng chat <a href="https://electronjs.org/apps/slack" target="_blank" rel="noopener">Slack</a> cũng được xây dựng từ Electron.</p></blockquote><p>Nếu bạn có thể xây dựng 1 web app, bạn hoàn toàn có thể xây dựng 1 desktop app rất dễ dàng với Electron. Không dài dòng nữa, cùng bắt đầu nào!</p><h3 id="Cai-dat-Nodejs"><a href="#Cai-dat-Nodejs" class="headerlink" title="Cài đặt Nodejs"></a>Cài đặt Nodejs</h3><p>Trước tiên bạn cần cài đặt <a href="https://nodejs.org" target="_blank" rel="noopener">Node.js</a>. Nếu bạn đã có Node.js, hãy chuyển tới bước tiếp theo!</p><h3 id="Khoi-tao-thu-muc"><a href="#Khoi-tao-thu-muc" class="headerlink" title="Khởi tạo thư mục"></a>Khởi tạo thư mục</h3><p>Tạo một thư mục dành cho ứng dụng của bạn và chạy câu lệnh <code>npm init</code> trong thư mục đó:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">mkdir</span> electron-hello-world<span class="token function">cd</span> electron-hello-world<span class="token function">npm</span> init</code></pre><p><code>npm init</code> sẽ đưa bạn qua từng bước để tạo một file <code>package.json</code> cơ bản.<br>Bạn cũng có thể sử dụng <code>npm init -y</code> để chấp nhận tất cả các mặc định<br>Kết quả sẽ như thế này:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"electron-hello-world"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">}</span></code></pre><h3 id="Cai-dat-Electron"><a href="#Cai-dat-Electron" class="headerlink" title="Cài đặt Electron"></a>Cài đặt Electron</h3><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> electron --save</code></pre><p>Sau khi cài đặt Electron, bạn hãy vào file <code>package.json</code> và thêm vào lệnh <code>start</code> như dưới đây, bỏ luôn lệnh <code>test</code> đi cũng được.</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"electron-hello-world"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"start"</span><span class="token operator">:</span> <span class="token string">"electron ."</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">}</span></code></pre><h3 id="Cau-truc-thu-muc"><a href="#Cau-truc-thu-muc" class="headerlink" title="Cấu trúc thư mục"></a>Cấu trúc thư mục</h3><p>Đây là cấu trúc cơ bản của một Electron app:</p><pre class=" language-dir"><code class="language-dir">electron-hello-world/  ├── /node_modules  ├── package-lock.json  ├── package.json  ├── main.js  └── index.html</code></pre><p>Bây giờ chúng ta sẽ tiếp tục với <code>main.js</code> và <code>index.html</code> nào!</p><h3 id="File-main-js"><a href="#File-main-js" class="headerlink" title="File main.js"></a>File main.js</h3><p>Các bạn có thể copy đoạn code sau cho nhanh, nhưng theo mình các bạn nên gõ lại, tuy mất một chút thời gian nhưng như thế sẽ tốt hơn đối với người mới bắt đầu làm quen đấy!</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> electron <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'electron'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/* module dùng để quản lí app */</span><span class="token keyword">const</span> app <span class="token operator">=</span> electron<span class="token punctuation">.</span>app<span class="token comment" spellcheck="true">/* module dùng để tạo của sổ cho ứng ứng dụng  */</span><span class="token keyword">const</span> BrowserWindow <span class="token operator">=</span> electron<span class="token punctuation">.</span>BrowserWindow<span class="token comment" spellcheck="true">/* biến mainWindow bắt buộc phải là biến toàn cục */</span><span class="token keyword">let</span> mainWindow<span class="token keyword">function</span> createWindow <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/* tạo cửa sổ cho ứng dụng với 2 tham số width và height  ngoài ra còn rất nhiều những tham số khác sẽ được đề cập ở các phần sau */</span>  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span>width<span class="token punctuation">:</span> <span class="token number">800</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">600</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">/* tải file index.html làm GUI */</span>  mainWindow<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`file://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.html`</span></span><span class="token punctuation">)</span>  mainWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'closed'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    mainWindow <span class="token operator">=</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* createWindow() khi Electron đã hoàn thành việc khởi tạo và sẵn sàng.một số APIs chí có thể sử dụng sau khi event này xảy ra */</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'ready'</span><span class="token punctuation">,</span> createWindow<span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'window-all-closed'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'activate'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>mainWindow <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h3 id="File-index-html"><a href="#File-index-html" class="headerlink" title="File index.html"></a>File index.html</h3><p>Bạn có thể tạo một file <code>index.html</code> đơn giản như sau:</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>My First Electron App<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    Hello world  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="Chay-ung-dung"><a href="#Chay-ung-dung" class="headerlink" title="Chạy ứng dụng"></a>Chạy ứng dụng</h3><p>Bây giờ, bạn hãy mở command promt lên và chạy lệnh <code>npm start</code> từ thư mục của bạn.<br>Tada, bạn vừa tạo ra 1 desktop app bằng ngôn ngữ web đó. Bạn có thể quay lại editor để chỉnh sửa file <code>index.html</code>, hay bạn cũng có thể tạo thêm các file <code>.css</code>, <code>.js</code> và nhúng vào <code>index.html</code> để ứng dụng đẹp hơn, thú vị hơn, hoặc tạo thêm nhiều file <code>.html</code> khác, chả khác gì việc xây dựng một web app cả.</p>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Giới thiệu về Set trong Javascript</title>
      <link href="/2018/09/10/gioi-thieu-ve-set-trong-javascript/"/>
      <url>/2018/09/10/gioi-thieu-ve-set-trong-javascript/</url>
      <content type="html"><![CDATA[<blockquote><p>Set là một kiểu object mới trong ES6 (ES2015), dùng để lưu trữ các giá trị không trùng lặp. Set có thể chứa bất kì kiểu giá trị nào, gồm các giá trị <em>primitive</em> (string, number, boolean, null, undefined, symbol) hay thậm chí là object literal hoặc array.</p></blockquote><p>Sau đây là ví dụ về một set đơn giản với một số phương thức của set như <code>add</code>, <code>size</code>, <code>has</code>, <code>forEach</code>, <code>delete</code> và <code>clear</code>:</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'🐱'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'🐶'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'🐔'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'🐷'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'🐶'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//4</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'🐷'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// true</span>animals<span class="token punctuation">.</span><span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token string">'🐷'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">'🐷'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// false</span>animals<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>animal <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Hey </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>animal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*Hey 🐱!Hey 🐶!Hey 🐔!Hey 🐷!*/</span>animals<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 0</span></code></pre><p>Dưới đây tiếp tục là một ví dụ khác về set. Ở đây, chúng ta truyền vào một array để khởi tạo set. Hãy chú ý vào array đầu tiên: do chứa các giá trị trùng lặp nên không được giữ nguyên kiểu array mà đã bị tách thành 2 giá trị không trùng lặp. Array tiếp theo do chứa các giá trị không trùng lặp nên vẫn được giữ nguyên kiểu array.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> myAnimals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'🐷'</span><span class="token punctuation">,</span> <span class="token string">'🐢'</span><span class="token punctuation">,</span> <span class="token string">'🐷'</span><span class="token punctuation">,</span> <span class="token string">'🐷'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myAnimals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'🐨'</span><span class="token punctuation">,</span> <span class="token string">'🐑'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>myAnimals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'Rud'</span><span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token string">'🐢'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myAnimals<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>myAnimals<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>animal <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animal<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*🐷🐢["🐨", "🐑"]Object { name: "Rud", type: "🐢" }*/</span></code></pre><p>String là kiểu iterable nên cũng có thể truyền vào để khởi tạo set.</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Trong set này chỉ gồm những kí tự khác nhau'</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 43</span><span class="token keyword">let</span> sentence <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token string">'Trong set này chỉ gồm những kí tự khác nhau'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sentence<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 23</span></code></pre><p>Trong những ví dụ trên, chúng ta đã sử dụng <code>forEach</code> để duyệt qua các giá trị trong set. Ngoài ra, chúng ta cũng có thể sử dụng <code>for...of</code>.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> moreAnimals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'🐘 '</span><span class="token punctuation">,</span> <span class="token string">'🐴'</span><span class="token punctuation">,</span> <span class="token string">'🐕'</span><span class="token punctuation">,</span> <span class="token string">'🐇'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> animal <span class="token keyword">of</span> moreAnimals<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Hi </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> animal <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*Hi 🐘Hi 🐴Hi 🐕Hi 🐇*/</span></code></pre><p>Set còn có phương thức <code>keys</code> và <code>values</code>, và hai phương thức này đều trả về một SetIterator chứa các giá trị trong set.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">let</span> garden <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'🌷'</span><span class="token punctuation">,</span> <span class="token string">'🌹'</span><span class="token punctuation">,</span> <span class="token string">'🌻'</span><span class="token punctuation">,</span> <span class="token string">'🌷'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> flowers <span class="token operator">=</span> garden<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// SetIterator {"🌷", "🌹", "🌻"}</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flowers<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>done<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*{value: "🌷", done: false}{value: "🌹", done: false}false*/</span></code></pre>]]></content>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
